name: CI/CD Pipeline for Express App

on:
  push:
    branches:
      - master  # Trigger the pipeline on push to 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: us-east-1  # Replace 'us-east-1' with your desired region

      - name: Build Docker image
        run: |
          docker build -t express-app .

      - name: Tag Docker image for ECR
        run: |
          docker tag express-app:latest 529088279946.dkr.ecr.us-east-1.amazonaws.com/express-app:latest

      - name: Push Docker image to ECR
        run: |
          docker push 529088279946.dkr.ecr.us-east-1.amazonaws.com/express-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to EC2 (SSH)
        uses: appleboy/ssh-action@v0.1.3  # Updated to a stable version
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}  # Use secrets for the username
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # Stop existing container if running
            sudo docker stop express-app || true
            sudo docker rm express-app || true

            # Pull the latest image from ECR
            sudo docker pull 529088279946.dkr.ecr.us-east-1.amazonaws.com/express-app:latest

            # Run the new container with restart policy
            sudo docker run -d --restart always -p 80:3000 --name express-app 529088279946.dkr.ecr.us-east-1.amazonaws.com/express-app:latest
